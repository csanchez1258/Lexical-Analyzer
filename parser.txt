Bash: Compile ....
Bash: Run the program
Enter file name: 
Token                                         Lexi
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SEPERATOR                                        #
KEYWORD                                        int
IDENTIFIER                                     sum
SEPERATOR                                        ,
IDENTIFIER                                     avg
SEPERATOR                                        ;
SEPERATOR                                        #
IDENTIFIER                                     sum
OPERATOR                                         =
INTEGER                                          3
OPERATOR                                         +
INTEGER                                          3
SEPERATOR                                        ;
IDENTIFIER                                     avg
OPERATOR                                         =
IDENTIFIER                                     sum
OPERATOR                                         /
INTEGER                                          2
SEPERATOR                                        ;


Now Checking rules for Rat23s
===============================
<Rat23S> -> <Opt Function Definitions> # <Opt Declaration List> # <Statement List>
<Opt Function Definitions> -> <Empty>


||   Token: SEPERATOR      Lexeme: # || 
<Opt Declaration List> -> <Declaration List>
<Declaration List> -> <Declaration> ; <Declaration List 2>
<Declaration> -> <Qualifier > <IDs>
<Qualifier> -> int


||   Token: KEYWORD      Lexeme: int || 
<IDs> -> <Identifier> <IDs 2>
<Identifier> -> sum


||   Token: IDENTIFIER      Lexeme: sum || 
<IDs 2> -> , <IDs>


||   Token: SEPERATOR      Lexeme: , || 
<IDs> -> <Identifier> <IDs 2>
<Identifier> -> avg


||   Token: IDENTIFIER      Lexeme: avg || 
<IDs 2> -> <Empty>


||   Token: SEPERATOR      Lexeme: ; || 
<Declaration List 2> -> <EMPTY>


||   Token: SEPERATOR      Lexeme: # || 
<Statement List> -> <Statement> <Statement List2>
<Statement> -> <Identifier>
<Assign> -> <Identifier> = <Expression>;
<Identifier> -> sum


||   Token: IDENTIFIER      Lexeme: sum || 


||   Token: OPERATOR      Lexeme: = || 
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> <Primary>
<Primary> -><Integer>
<Integer> -> 3


||   Token: INTEGER      Lexeme: 3 || 
<Term Prime> -> <Empty>
<Expression Prime> -> + <Term> <Expression Prime>


||   Token: OPERATOR      Lexeme: + || 
<Term> -> <Factor> <Term Prime>
<Factor> -> <Primary>
<Primary> -><Integer>
<Integer> -> 3


||   Token: INTEGER      Lexeme: 3 || 
<Term Prime> -> <Empty>
<Expression Prime> -> <Empty>


||   Token: SEPERATOR      Lexeme: ; || 
<Statement List 2> -> <Statement List>
<Statement List> -> <Statement> <Statement List2>
<Statement> -> <Identifier>
<Assign> -> <Identifier> = <Expression>;
<Identifier> -> avg


||   Token: IDENTIFIER      Lexeme: avg || 


||   Token: OPERATOR      Lexeme: = || 
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> <Primary>
<Primary> -><Identifier>
<Identifier> -> sum


||   Token: IDENTIFIER      Lexeme: sum || 
<Primary 2> -> <EMPTY>
<Term Prime> -> / <Factor> <Term Prime>


||   Token: OPERATOR      Lexeme: / || 
<Factor> -> <Primary>
<Primary> -><Integer>
<Integer> -> 2


||   Token: INTEGER      Lexeme: 2 || 
<Term Prime> -> <Empty>
<Expression Prime> -> <Empty>


||   Token: SEPERATOR      Lexeme: ; || 
<Statement List 2> -> <Empty>


end

Bash: The script file will now terminate
